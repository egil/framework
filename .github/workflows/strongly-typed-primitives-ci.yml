# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: strongly-typed-primitives-ci
on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    paths:
      - '*'
      - 'StronglyTypedPrimitives/**'
      - '.github/workflows/strongly-typed-primitives-ci.yml'
  pull_request:
    branches:
      - '*'       
    paths:
      - '*'                     
      - 'StronglyTypedPrimitives/**' 
      - '.github/workflows/strongly-typed-primitives-ci.yml'
  release:
    types:
      - published

concurrency:
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/main' && github.run_id || github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace}}/nuget
  TestResultsDirectory: ${{ github.workspace}}/TestResults
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  create-nuget:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Get all history to allow automatic versioning using MinVer

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            9.x
            10.x

      # Create the NuGet package in the folder from the environment variable NuGetDirectory
      - run: |
          dotnet build ./StronglyTypedPrimitives/src/StronglyTypedPrimitives.Abstractions/StronglyTypedPrimitives.Abstractions.csproj -c Release -f net9.0
          dotnet build ./StronglyTypedPrimitives/src/StronglyTypedPrimitives.Abstractions/StronglyTypedPrimitives.Abstractions.csproj -c Release -f net8.0
          dotnet build ./StronglyTypedPrimitives/src/StronglyTypedPrimitives.Abstractions/StronglyTypedPrimitives.Abstractions.csproj -c Release -f netstandard2.0
          dotnet pack ./StronglyTypedPrimitives/src/StronglyTypedPrimitives --configuration Release --output ${{ env.NuGetDirectory }}

      # Publish the NuGet package as an artifact, so they can be used in the following jobs
      - uses: actions/upload-artifact@v4
        with:
          name: nuget
          if-no-files-found: error
          retention-days: 7
          path: ${{ env.NuGetDirectory }}/*.nupkg

  validate-nuget:
    runs-on: ubuntu-latest
    needs: [ create-nuget ]
    steps:

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            9.x
            10.x

      - uses: actions/download-artifact@v4
        with:
          name: nuget
          path: ${{ env.NuGetDirectory }}

      - name: Install nuget validator
        run: dotnet tool update Meziantou.Framework.NuGetPackageValidation.Tool --global

      # Validate metadata and content of the NuGet package
      - name: Validate package
        shell: pwsh
        run: meziantou.validate-nuget-package (Get-ChildItem "${{ env.NuGetDirectory }}/*.nupkg") --excluded-rules IconMustBeSet

  run-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      TestResultsDirectory: ${{ github.workspace }}/TestResults
    permissions:
      checks: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            9.x
            10.x

      - name: Run tests
        run: dotnet test ./StronglyTypedPrimitives/StronglyTypedPrimitives.sln --configuration Release --logger trx --results-directory "${{ env.TestResultsDirectory }}" --collect:"XPlat Code Coverage"

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.framework }}
          if-no-files-found: error
          retention-days: 3
          path: ${{ env.TestResultsDirectory }}/**

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: github.actor != 'dependabot[bot]' && (success() || failure()) && github.repository_owner == 'egil'
        with:
          name: test-results-${{ matrix.framework }}
          path: ${{ env.TestResultsDirectory }}/**/*.trx
          path-replace-backslashes: 'true'
          reporter: dotnet-trx

  dependency-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    if: github.event_name == 'pull_request' && github.repository_owner == 'egil'
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v4
      - name: 'Dependency Review'
        uses: actions/dependency-review-action@v4

  deploy:
    # Publish only when creating a GitHub Release
    if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    needs: [ validate-nuget, run-test ]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: nuget
          path: ${{ env.NuGetDirectory }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            9.x
            10.x

      - name: Publish NuGet package
        shell: pwsh
        run: |
          foreach($file in (Get-ChildItem "${{ env.NuGetDirectory }}" -Recurse -Include *.nupkg)) {
              dotnet nuget push $file --api-key "${{ secrets.NUGET_APIKEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
          }